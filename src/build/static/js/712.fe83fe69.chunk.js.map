{"version":3,"file":"static/js/712.fe83fe69.chunk.js","mappings":"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","sources":["components/AlumniJobCard.js","screens/AlumniJobScreen.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from 'react-bootstrap/Col';\r\nimport '../components/AlumniJobCard.css';\r\n\r\nfunction JobCard(props) {\r\n  const { jobTitle, companyName, jobDescription, salary, location, highestQualification, createdAt, updatedAt } = props;\r\n  const [hovered, setHovered] = useState(false);\r\n\r\n  return(\r\n    <Col xs={12} md={6} lg={6} xl={4} xxl={3}>\r\n      <div style={{ padding: '10px' }}>\r\n        <Card\r\n        style={{ border: '3px dashed rgba(44, 41, 41, 0.400'}}\r\n          // style={{ width: '100%' }}\r\n          className={hovered ? 'job-card hovered' : 'job-card'}\r\n          onMouseEnter={() => setHovered(true)}\r\n          onMouseLeave={() => setHovered(false)}\r\n        >\r\n          \r\n          <Card.Body className='jobCard'>\r\n            <Card.Title className='text-primary text-center'>{jobTitle}</Card.Title>\r\n            <br></br>\r\n            <Card.Text className=\"mb-2\">Company: {companyName}</Card.Text>\r\n\r\n            <Card.Text className=\"mb-2\">Qualification: {highestQualification}</Card.Text>\r\n            <Card.Text className=\"mb-2\">Job Location: {location}</Card.Text>\r\n            <Card.Text>Salary: {salary}/- INR</Card.Text>\r\n            <Card.Text>Description:<br></br>{jobDescription}</Card.Text>\r\n            <Card.Text className=\"smalltext text-muted\">Job listing created at: {createdAt}</Card.Text>\r\n            <Card.Text className=\"smalltext text-muted\">Job listing updated at: {updatedAt}</Card.Text>\r\n\r\n            <Button variant=\"dark\"  block href=\"#\">Apply Now</Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default JobCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport JobCard from \"../components/AlumniJobCard\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Row } from \"react-bootstrap\";\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\n\r\nconst JobScreen = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/jobs\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const formattedJobs = data.jobs.map((job) => {\r\n          const createdAt = new Date(job.createdAt).toLocaleString(\"en-US\", { timeZone: \"Asia/Kolkata\" }) + \" IST\";\r\n          const updatedAt = new Date(job.updatedAt).toLocaleString(\"en-US\", { timeZone: \"Asia/Kolkata\" }) + \" IST\";\r\n          return {\r\n            ...job,\r\n            createdAt,\r\n            updatedAt,\r\n          };\r\n        });\r\n        setJobs(formattedJobs);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n      return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <div>\r\n          <br></br>\r\n          <h2 className=\"text-center\">All Available Jobs Postings</h2>\r\n          <br></br>\r\n        </div>\r\n        <Row>\r\n          {Array.isArray(jobs) && jobs.length > 0 ? (\r\n            jobs.map((job) => (\r\n              <JobCard\r\n                key={job._id}\r\n                jobTitle={job.jobTitle}\r\n                companyName={job.companyName}\r\n                jobDescription={job.jobDescription}\r\n                salary={job.salary}\r\n                location={job.location}\r\n                highestQualification={job.highestQualification}\r\n                createdAt={job.createdAt}\r\n                updatedAt={job.updatedAt}\r\n              />\r\n            ))\r\n          ) : (\r\n            <p>No jobs available.</p>\r\n          )}\r\n        </Row>\r\n      </Container>\r\n\r\n      <Footer/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobScreen;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["props","jobTitle","companyName","jobDescription","salary","location","highestQualification","createdAt","updatedAt","_useState","useState","_useState2","_slicedToArray","hovered","setHovered","_jsx","Col","xs","md","lg","xl","xxl","children","style","padding","Card","border","className","onMouseEnter","onMouseLeave","_jsxs","Button","variant","block","href","jobs","setJobs","useEffect","fetch","then","response","json","data","formattedJobs","map","job","Date","toLocaleString","timeZone","_objectSpread","catch","error","console","log","_Fragment","Header","Container","Row","Array","isArray","length","JobCard","_id","Footer","CardImg","React","_ref","ref","bsPrefix","_ref$as","as","Component","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","classNames","concat","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","ImgOverlay"],"sourceRoot":""}