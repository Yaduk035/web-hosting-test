{"version":3,"file":"static/js/597.85a0d767.chunk.js","mappings":"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","sources":["components/IndividualJobCard.js","screens/ViewJob.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Row, Modal } from \"react-bootstrap\";\r\nimport \"../components/AdminJobcard.css\";\r\nimport JobUpdateModal from \"./updatepopup\";\r\n\r\nfunction IndividualJobCard(props) {\r\n  const {\r\n    jobTitle,\r\n    companyName,\r\n    jobDescription,\r\n    salary,\r\n    location,\r\n    highestQualification,\r\n    jobId,\r\n    onDelete,\r\n    upJobId,\r\n  } = props;\r\n  const [hovered, setHovered] = useState(false);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\r\n\r\n  const handleDelete = () => {\r\n    onDelete(jobId);\r\n    setShowModal(false);\r\n  };\r\n  const handleUpdate = () => {\r\n    setShowUpdateModal(true);\r\n  };\r\n\r\n  return (\r\n    <Col xs={12} md={6} lg={6} xl={4} xxl={3}>\r\n      <div style={{ padding: \"10px\" }}>\r\n        <Card\r\n          style={{ border: \"3px dashed rgba(44, 41, 41, 0.400\" }}\r\n          // style={{ width: '100%' }}\r\n          className={hovered ? \"job-card hovered\" : \"job-card\"}\r\n          onMouseEnter={() => setHovered(true)}\r\n          onMouseLeave={() => setHovered(false)}\r\n        >\r\n          <Card.Body className=\"jobCard\">\r\n            <Card.Title className=\"text-primary text-center\">\r\n              {jobTitle}\r\n            </Card.Title>\r\n            <br></br>\r\n            <Card.Text className=\"mb-2\">Company: {companyName}</Card.Text>\r\n\r\n            <Card.Text className=\"mb-2\">\r\n              Qualification: {highestQualification}\r\n            </Card.Text>\r\n            <Card.Text className=\"mb-2\">Job Location: {location}</Card.Text>\r\n            <Card.Text>Salary: {salary}/- INR</Card.Text>\r\n            <Card.Text>\r\n              Description:<br></br>\r\n              {jobDescription}\r\n            </Card.Text>\r\n\r\n            {/* <Button variant=\"dark\"  block href=\"#\">Apply Now</Button> */}\r\n            <Row>\r\n              <Col xs={6} sm={6}>\r\n                {/* <Button variant=\"dark\" size=\"sm\" block href=\"#\">Update</Button> */}\r\n                <Button variant=\"dark\" size=\"sm\" block onClick={handleUpdate}>\r\n                  Update\r\n                </Button>\r\n              </Col>\r\n              <Col xs={6} sm={6}>\r\n                <Button\r\n                  variant=\"outline-danger\"\r\n                  size=\"sm\"\r\n                  block\r\n                  onClick={() => setShowModal(true)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"smalltext\">\r\n          Are you sure you want to delete this job listing?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            size=\"sm\"\r\n            onClick={() => setShowModal(false)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" size=\"sm\" onClick={handleDelete}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <JobUpdateModal\r\n        show={showUpdateModal}\r\n        onHide={() => {\r\n          setShowUpdateModal(false);\r\n        }}\r\n        upJobId={upJobId}\r\n        jobTitle={jobTitle}\r\n        companyName={companyName}\r\n        jobDescription={jobDescription}\r\n        salary={salary}\r\n        location={location}\r\n        highestQualification={highestQualification}\r\n      />\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default IndividualJobCard;","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport JobCard from \"../components/IndividualJobCard\";\r\n\r\nfunction ViewJob() {\r\n  const [media, setMedia] = useState([]);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    const postedBy = userInfo.userID;\r\n    axios\r\n      .get(`http://localhost:4000/jobs/individual?postedBy=${postedBy}`)\r\n      .then(({ data }) => {\r\n        setMedia(data.results);\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    fetch(`http://localhost:4000/jobs/${id}`, { method: \"DELETE\" })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Remove the deleted job from the state\r\n        setMedia((prevJobs) => prevJobs.filter((data) => data._id !== id));\r\n        console.log(data.message);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <Container>\r\n        <Row>\r\n          {Array.isArray(media)\r\n            ? media.map((data) => {\r\n                return (\r\n                  <JobCard\r\n                    key={data._id}\r\n                    jobTitle={data.jobTitle}\r\n                    companyName={data.companyName}\r\n                    jobDescription={data.jobDescription}\r\n                    salary={data.salary}\r\n                    location={data.location}\r\n                    highestQualification={data.highestQualification}\r\n                    upJobId={data._id}\r\n                    onDelete={() => handleDelete(data._id)}\r\n                  ></JobCard>\r\n                );\r\n              })\r\n            : null}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewJob;"],"names":["props","jobTitle","companyName","jobDescription","salary","location","highestQualification","jobId","onDelete","upJobId","_useState","useState","_useState2","_slicedToArray","hovered","setHovered","_useState3","_useState4","showModal","setShowModal","_useState5","_useState6","showUpdateModal","setShowUpdateModal","_jsxs","Col","xs","md","lg","xl","xxl","children","_jsx","style","padding","Card","border","className","onMouseEnter","onMouseLeave","Row","sm","Button","variant","size","block","onClick","Modal","show","onHide","closeButton","JobUpdateModal","media","setMedia","useEffect","postedBy","JSON","parse","localStorage","getItem","userID","axios","concat","then","_ref","data","results","Header","Container","Array","isArray","map","JobCard","_id","id","fetch","method","response","json","prevJobs","filter","console","log","message","catch","error"],"sourceRoot":""}